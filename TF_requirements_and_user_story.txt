Требуется разработать систему для фонда ДУ.

=====================
База данных. Таблицы:

1. Investor:
	id
	name
	surname
	investype
	count_pies
	email
	address

2. investor_type:
	id (1 2 3)
	investype (admin keykeeper investor)

3. balance_story:
	id
	balance

=====================

База данных. Описание таблиц.

Investor:
Создается таблица инвесторов, включающая столбцы: уникальный id, имя, фамилия (необязательное для заполнения поле), тип (int), количество паев, е-мейл, usdt-адрес (ERC-20).

investor_type:
Создается таблица тип инвестора, включающая столбцы: уникальный id и тип инвестора. 
Всего существует 3 типа:
1. Admin - инвестор с полным доступом к аккаунту фонда.
2. Keykeeper - инвестор с частью ключа входа в аккаунт входа (на случай форс-мажорных обстоятельств все Keykeeperы связываются друг с другом и получают полный ключ)
3. Investor - стандартный инвеестор.

balanse_story:
Создается таблица истории баланса, включающая столбцы: уникальный id и баланс.

Таблицы Investor и investor_type связаны: Investor.investype = investor_type.id.

=====================

Роли:
- admin
- investor

Специальные термины:
- pie: стоимость доли инвестора в фонде, 1 пай по сути одна акция фонда. 
Считается по формуле pie = balance/sum(count_pies) (один пай равен балансу, разделенному на количество паев всех инвесторов)

User stories:

1.1. Как admin, я хочу иметь возможность ввода актуальной суммы баланса фонда и получать в ответ цену одного пая, чтобы сообщать ее инвесторам или новому инвестору для - входа в фонд (ввод в таблицу balance_story, расчет: последнее поле balance/сумму всех count_pies, вывод полученного значения).
1.2. Как admin, я хочу иметь возможность получать список всех инвесторов фонда (вывод таблицы investor).
1.3. Как admin, я хочу добавлять новых инвесторов в список инвесторов (ввод в таблицу investor).

2.1. Как investor, я хочу иметь возможность ввода актуальной суммы баланса фонда и получать в ответ цену одного пая для входа в фонд (ввод в таблицу balance_story, расчет: последнее поле balance/сумму всех count_pies, вывод полученного значения).
2.2. Как investor, я хочу иметь возможность получать список всех инвесторов фонда (вывод таблицы investor).

Реализация пунктов 1.1, 1.2 и 2.1, 2.2 совпадают.
По сути мы получаем две панели управления на клиенте:

Возможности admin панели:
	- [ 1 ] Расчет цены пая
	- [ 2 ] Список инвесторов
	- [ 3 ] Добавить инвестора

Возможности investor панели:
	- [ 1 ] Расчет цены пая
	- [ 2 ] Список инвесторов

=====================

РЕАЛИЗАЦИЯ

[ 1 ] Расчет цены пая.
Считается по формуле pie = balance/sum(count_pies) (один пай равен балансу фонда, разделенному на количество паев всех инвесторов)

	Пример:
	На старте фонда оговорено, что 1 пай стоит $100.
	На старте в фонд решило войти 3 инвестора.
	1 инвестор: покупает 1 пай на общую сумму $100.
	2 инвестор: покупает 3 пая на общую сумму $300.
	3 инвестор: покупает 1 пай на общую сумму $100.
	Итого: 
	Фонд составляет $500.
	Всего в фонде 3 инвестора, суммарно у них 5 паев, цена одного пая = $500/5 = $100.
	
	Допустим, после месяца работы фонда с помощью удачных торговых сделок, фонд вырос с $500 до $1000.
	Цена 1 пая составляет: $1000/5 паев = $200
	1 инвестор имеет 1 пай и его баланс уже составляет $200.
	2 инвестор имеет 3 пая и его баланс уже составляет $600.
	3 инвестор имеет 1 пай и его баланс уже составляет $200.
	
	Допустим, в фонд хочет зайти 4 инвестор и спрашивает, сколько сейчас стоит 1 пай.
	Админ вводит в разрабатываемую систему актуальный баланс фонда и получает в ответ цену 1 пая (в нашем примере цена 1 пая составляет: $1000/5 = $200)
	4 инвестор, например, решает купить 10 паев. Для этого он вносит $200*10 = $2000.
	Итого: 
	Фонд составляет $3000.
	Всего в фонде 4 инвестора, суммарно у них 15 паев, цена одного пая = $3000/15 = $200.

Что принимает API:
balance = request.form.get('balance')

Что происходит в бизнес логике:
1. Поместить balance в колонку balance таблицы balance_story.
2. Извлечь из таблицы Investor сумму всех паев
	select SUM(count_pies) from public.investor;
3. Разделить balance на полученную cумму паев.
4. Вернуть на клиент результат деления.


[ 2 ] Список инвесторов
Что принимает API: -

Что происходит в бизнес логике:
1. Извлечь все данные из таблицы Investor
	1.1 Значения поля investype таблицы Investor получить из колонки investype таблицы investor_type.
2. Вернуть полученные данные на клиент.


[ 3 ] Добавить инвестора
Что принимает API:

name = request.form.get('name')
surname = request.form.get('surname')
investype = request.form.get('investype')
count_pies = request.form.get('count_pies')
email = request.form.get('email')
address = request.form.get('address')

Что происходит в бизнес логике:
1. Введенные данные помещаются в таблицу Investor.


